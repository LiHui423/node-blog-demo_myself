1.创建node-blog-demo项目
2.创建.gitignore
    2.1忽略 .idea
    2.2忽略 node_modules
3.创建README.md写项目基本信息
4.创建 package.json 项目根目录下执行cmd命令 npm init,修改"main":app.js
5.根目录下创建入口文件app.js
6.创建目录views
7.在views中创建文件default.html,项目首页，有登录链接和注册链接
8.创建文件views/sign-in.html,sign-up.html,含有登录和注册的表单
9.安装modules ：express,mysql,body-parser,项目根目录执行命令 cmd:cnpm i -S express mysql body-parser
10.修改app.js文件，创建简单的服务器
11.启动服务，根目录下cmd:supervisor app.js
12.引入核心模块path，
13.配置首页的路由，修改app.js文件，app.get('/',(req,res)=>{});
14.配置注册页和登录页链接的路由，修改app.js文件，app.get('/sign-up',(req,res)=>{})
15.配置注册请求路由，修改app.js文件，app.post('/signUp',(req,res)=>{})
16.引入body-parser,配置body-parser中间件，获取表单信息：req.body.username;req.body.password
17.引入mysql,创建连接池pool
18.创建文件sql/db.sql建库：blog 建表:user id;username;password
19.数据库处理，保存用户名和密码
20.返回响应，注册成功，去向views/sign-in.html,失败停留当前页面
21.配置登录路由
    21.1 请求表单修改action='/signIn'
    21.2 创建路由 app.post('/signIn',...)
    21.3 获取保单参数
    21.4 数据库处理，查询
    21.5 返回响应，登录成功，去向views/index.html页面
22.创建项目主页：views/index.html
23.创建数据库表username 字段的唯一性约束
24.注册时，验证用户名是否存在，如果存在，返回注册页，不存在继续注册
25.用户注册时密码加密操作，安装项目依赖，cmd:cnpm i -S bcryptjs
25.注册时，对名文密码加密，先生成盐，再加密后存入数据库
26.修改登录的业务逻辑：先根据用户名查加密后的密码，再做判断
27.使用模板引擎cmd:cnpm i -S ejs，做了一个示例
28.修改app.js文件，引入EJS，配置EJS相关的中间件
29.使用模板，方法是：res.render('*.html',{key:value})
30.注册失败（用户名存在）,提示用户名已经存在
31.修改views/sign-up.html 添加提示信息变量
32.返回页面的方式改为：res.render('路径或路由名字',{key:value})
33.页面跳转改为res.render()方式
34.重构，创建路由目录 routes
35.使用express session,先安装依赖，cmd:cnpm i -S express-session
36.app.js中引入express-session
37.app.js设置session中间件
38.使用session:req.session.key=value;








---
Github相关内容
1.创建node-blog-demo项目
2.创建.gitignore
    2.1忽略 .idea
    2.2忽略 node_modules
3.创建README.md写项目基本信息
4.系统用户目录下创建.gitconfig
    [user]
        name=LiHui423
        email=576436588@qq.com
5..gitconfig可以在webstorm创建，放到系统用户目录下
6.配置webstorm
    6.1 安装git,下载地址：http://git-scm.com
    6.2 全部默认安装
    6.3 File-Settings-Version Control-Git
    6.4 File-Settings-Version Control-Github
    6.5 Auth-Type:password
    6.6 填写用户名和密码，Test
7.向Github提交项目,菜单VCS->Import into version control->share project on github->share
8.项目修改后，提交快捷键ctrl+k,提交时选择commit and push
